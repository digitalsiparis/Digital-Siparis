datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  hashedPw  String
  fullName  String?
  phone     String?
  role      String   @default("customer")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Vendor    Vendor?   // 1-1 (kullanıcıya tek mağaza). İleride 1-N istersen Vendor[] yaparız.
  Reviews   Review[]
}

model Vendor {
  id        String   @id @default(uuid())
  ownerId   String?  @unique           // ← EKLENDİ: 1-1 ilişki için unique
  owner     User?    @relation(fields: [ownerId], references: [id])
  name      String
  slug      String   @unique
  score     Decimal? @db.Decimal(3,1)
  status    String   @default("pending")
  Offers    Offer[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id        String   @id @default(uuid())
  name      String
  slug      String   @unique
  parentId  String?
  parent    Category? @relation("CategoryToCategory", fields: [parentId], references: [id])
  children  Category[] @relation("CategoryToCategory")
  Products  Product[]
}

model Product {
  id          String   @id @default(uuid())
  title       String
  slug        String   @unique
  description String?
  brand       String?
  categoryId  String?
  category    Category? @relation(fields: [categoryId], references: [id])
  ratingAvg   Decimal? @db.Decimal(2,1)
  ratingCnt   Int      @default(0)
  images      ProductImage[]
  variants    Variant[]
  offers      Offer[]
  reviews     Review[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ProductImage {
  id        String  @id @default(uuid())
  url       String
  position  Int     @default(0)
  productId String
  product   Product @relation(fields: [productId], references: [id])
}

model Variant {
  id        String   @id @default(uuid())
  productId String
  product   Product  @relation(fields:[productId], references:[id])
  sku       String?  @unique
  attrs     Json
  barcode   String?
  weightG   Int?
  inventory Inventory?

  offers    Offer[]   // ← EKLENDİ: Offer.variant karşılığı
}

model Inventory {
  variantId   String  @id
  variant     Variant @relation(fields: [variantId], references: [id])
  qtyAvailable Int    @default(0)
  reserved     Int    @default(0)
  updatedAt    DateTime @updatedAt
}

model Offer {
  id         String   @id @default(uuid())
  vendorId   String
  productId  String
  variantId  String?
  vendor     Vendor   @relation(fields:[vendorId], references:[id])
  product    Product  @relation(fields:[productId], references:[id])
  variant    Variant? @relation(fields:[variantId], references:[id])
  priceMinor BigInt
  currency   String   @default("TRY")
  isBest     Boolean  @default(false)
  active     Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Review {
  id        String  @id @default(uuid())
  productId String
  userId    String
  product   Product @relation(fields: [productId], references: [id])
  user      User    @relation(fields: [userId], references: [id])
  stars     Int
  body      String?
  createdAt DateTime @default(now())
}

model PartnerApplication {
  id          String  @id @default(uuid())
  flow        String
  companyName String
  email       String
  phone       String?
  companyType String?
  province    String?
  district    String?
  category    String?
  refCode     String?
  status      String  @default("received")
  applicantId String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
